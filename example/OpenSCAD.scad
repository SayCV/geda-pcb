//SCAD

module line_segment_r(length, width, thickness, x, y, a, bd, c1, c2) {
	translate([x,y,0]) rotate ([0,0,a]) union() {
		if (bd) {cube ([length, width,thickness],true);}
		if (c2) {translate([length/2.,0,0]) cylinder(h=thickness, r=width/2,center=true,$fn=30);}
		if (c1) { translate([-length/2.,0,0]) cylinder(h=thickness, r=width/2,center=true,$fn=30);}
	}
}

module line_segment(length, width, thickness, x, y, a) {
	translate([x,y,0]) rotate ([0,0,a]) {
		cube ([length, width,thickness],true);
	}
}

// START_OF_LAYER: bottom
module layer_05_body (offset) {
translate ([0, 0, offset]) union () {
	line_segment_r(4.310523,0.508000,0.035000,15.240000,-11.557000,-135.000000,1,1,1);
	line_segment_r(12.319000,0.508000,0.035000,22.923500,-10.033000,180.000000,1,1,1);
	line_segment_r(3.053287,0.508000,0.035000,30.162500,-11.112500,135.000000,1,1,1);
	line_segment_r(0.254000,0.508000,0.035000,31.242001,-12.319000,90.000000,1,1,1);
	line_segment_r(8.890000,0.508000,0.035000,20.955000,-39.243000,180.000000,1,1,1);
	line_segment_r(8.261835,0.508000,0.035000,28.320999,-36.321999,-135.000000,1,1,1);
	line_segment_r(5.715000,0.508000,0.035000,31.242001,-30.543501,-90.000000,1,1,1);
// Fill rect
	translate ([0, 0, -0.017500]) linear_extrude(height=0.035000) polygon ([		[10.668000, -11.430000], 
		[10.668000, -12.954000], 
		[12.192000, -12.954000], 
		[12.192000, -11.430000]
	],[[
		0, 1, 2, 3]]);
	translate ([11.430000, -14.732000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -17.271999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -19.812000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -22.351999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -24.892000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -27.431999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -27.431999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -24.892000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -22.351999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -19.812000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -17.271999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -14.732000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -12.192000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -20.066000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -22.606001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -25.146000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -27.686001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
// Fill rect
	translate ([0, 0, -0.017500]) linear_extrude(height=0.035000) polygon ([		[30.480000, -11.684000], 
		[30.480000, -13.208000], 
		[32.004002, -13.208000], 
		[32.004002, -11.684000]
	],[[
		0, 1, 2, 3]]);
	translate ([31.242001, -14.986000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -17.525999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -27.686001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -25.146000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -22.606001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -20.066000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -17.525999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -14.986000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -12.446000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([16.510000, -39.243000, 0]) cylinder (r=0.457200, h=0.035000, center=true, $fn=30);
	translate ([13.716000, -13.081000, 0]) cylinder (r=0.457200, h=0.035000, center=true, $fn=30);
}
}


// END_OF_LAYER layer_05

// START_OF_LAYER: top
module layer_00_body (offset) {
translate ([0, 0, offset]) union () {
	line_segment_r(0.508000,0.508000,0.035000,11.684000,-12.192000,180.000000,1,1,1);
	line_segment_r(2.169900,0.508000,0.035000,15.631922,-29.649050,-90.000000,1,1,1);
	line_segment_r(17.663921,0.508000,0.035000,13.832078,-21.902040,-90.000000,1,1,1);
	line_segment_r(1.241790,0.508000,0.035000,13.393039,-12.631039,-45.000000,1,1,1);
	line_segment_r(1.524000,0.508000,0.035000,12.192000,-12.192000,0.000000,1,1,1);
	line_segment_r(1.601016,0.508000,0.035000,16.197962,-27.998051,-134.999451,1,1,1);
	line_segment_r(8.382000,0.508000,0.035000,20.955000,-27.431999,0.000000,1,1,1);
	line_segment_r(2.286000,0.508000,0.035000,21.716999,-35.687000,0.000000,1,1,1);
	line_segment_r(2.275100,0.508000,0.035000,13.832078,-37.967552,90.000000,1,1,1);
	line_segment_r(1.915900,0.508000,0.035000,13.832078,-40.190048,90.000000,1,1,1);
	line_segment_r(0.015430,0.508000,0.035000,13.837539,-39.110554,135.057770,1,1,1);
	line_segment_r(2.677922,0.508000,0.035000,15.171039,-39.243000,180.000000,1,1,1);
	line_segment_r(2.423900,0.508000,0.035000,36.967899,-29.522051,-90.000000,1,1,1);
	line_segment_r(0.882611,0.508000,0.035000,37.279953,-27.998051,-135.000000,1,1,1);
	line_segment_r(1.270000,0.508000,0.035000,38.227001,-27.686001,180.000000,1,1,1);
	line_segment_r(1.005100,0.508000,0.035000,36.957001,-31.247450,-90.000000,1,1,1);
	line_segment_r(0.015415,0.508000,0.035000,36.962448,-30.739450,-135.000000,1,1,1);
	line_segment_r(6.824995,0.508000,0.035000,27.559000,-29.844999,-45.000000,1,1,1);
	line_segment_r(1.280900,0.508000,0.035000,24.246078,-33.660446,90.000000,1,1,1);
	line_segment_r(1.960226,0.508000,0.035000,23.553040,-34.993954,45.000454,1,1,1);
	line_segment_r(6.477000,0.508000,0.035000,33.210499,-32.257999,180.000000,1,1,1);
	line_segment_r(0.718421,0.508000,0.035000,36.702999,-32.004002,-135.000000,1,1,1);
	line_segment_r(16.139921,0.508000,0.035000,35.168098,-22.664040,-90.000000,1,1,1);
	line_segment_r(3.037857,0.508000,0.035000,34.094048,-13.520039,-44.999706,1,1,1);
	line_segment_r(1.778000,0.508000,0.035000,32.131001,-12.446000,0.000000,1,1,1);
	line_segment_r(10.170900,0.508000,0.035000,26.045900,-38.105450,90.000000,1,1,1);
	line_segment_r(1.960241,0.508000,0.035000,26.738951,-43.883953,135.000000,1,1,1);
	line_segment_r(2.286000,0.508000,0.035000,28.575001,-44.577000,180.000000,1,1,1);
	line_segment_r(0.762000,0.254000,0.035000,17.780001,-5.334000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,17.843500,-4.889500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,18.034000,-4.826000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,18.224501,-4.889500,135.000000,1,1,1);
	line_segment_r(0.762000,0.254000,0.035000,18.288000,-5.334000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,18.224501,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,18.034000,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,17.843500,-5.778500,135.000000,1,1,1);
	line_segment_r(0.762000,0.254000,0.035000,18.719801,-5.842000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,18.656300,-5.397500,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,18.783300,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,18.973801,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,19.164301,-5.397500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,19.227800,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,19.164301,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,18.973801,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,18.783300,-5.778500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,19.850101,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,19.596102,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,19.532602,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,19.596102,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,19.786602,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,19.977102,-5.397500,135.000000,1,1,1);
	line_segment_r(0.508000,0.254000,0.035000,19.786602,-5.588000,180.000000,1,1,1);
	line_segment_r(0.127000,0.254000,0.035000,20.040602,-5.524500,90.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,20.472404,-5.651500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,20.535904,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.127000,0.254000,0.035000,20.662905,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,20.789904,-5.397500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,20.853403,-5.651500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,20.408903,-5.397500,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,21.729704,-4.889500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,21.475704,-4.826000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,21.221704,-4.889500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,21.158203,-5.080000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,21.221704,-5.270500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,21.475704,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,21.729704,-5.397500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,21.793203,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,21.729704,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,21.475704,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,21.221704,-5.778500,135.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.035000,22.440905,-5.842000,180.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.035000,22.186905,-5.753100,135.000000,1,1,1);
	line_segment_r(0.660400,0.254000,0.035000,22.098003,-5.334000,90.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.035000,22.186905,-4.914900,-135.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.035000,22.440905,-4.826000,180.000000,1,1,1);
	line_segment_r(0.762000,0.254000,0.035000,22.910807,-5.461000,90.000000,1,1,1);
	line_segment_r(0.310047,0.254000,0.035000,22.999706,-4.953000,-124.992020,1,1,1);
	line_segment_r(0.279400,0.254000,0.035000,23.228306,-4.826000,180.000000,1,1,1);
	line_segment_r(0.310047,0.254000,0.035000,23.456905,-4.953000,124.992020,1,1,1);
	line_segment_r(0.762000,0.254000,0.035000,23.545807,-5.461000,90.000000,1,1,1);
	line_segment_r(0.635000,0.254000,0.035000,23.228306,-5.334000,180.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.035000,23.977608,-5.334000,90.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.035000,24.396708,-4.914900,135.000000,1,1,1);
	line_segment_r(0.660400,0.254000,0.035000,24.485607,-5.334000,90.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.035000,24.396708,-5.753100,-135.000000,1,1,1);
	line_segment_r(0.457200,0.254000,0.035000,24.079208,-5.842000,180.000000,1,1,1);
	line_segment_r(0.457200,0.254000,0.035000,24.079208,-4.826000,180.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.035000,25.374607,-5.270500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,25.438108,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,25.374607,-5.207000,180.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,26.073109,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,25.819107,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,25.755608,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,25.819107,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,26.009607,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,26.200108,-5.397500,135.000000,1,1,1);
	line_segment_r(0.508000,0.254000,0.035000,26.009607,-5.588000,180.000000,1,1,1);
	line_segment_r(0.127000,0.254000,0.035000,26.263609,-5.524500,90.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,26.885910,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,27.139910,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,27.139910,-5.651500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,26.885910,-5.588000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,26.631910,-5.524500,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,26.631910,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,26.885910,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,27.139910,-5.397500,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,26.631910,-5.778500,135.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.035000,27.635212,-5.270500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,27.698711,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,27.635212,-5.207000,180.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.035000,28.473412,-5.270500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,28.536913,-5.778500,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,29.298912,-5.397500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,29.108412,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,28.917912,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,28.854412,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,28.917912,-5.778500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,29.362411,-5.524500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,29.425913,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,29.108412,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,29.298912,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,29.794214,-5.524500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,29.857714,-5.778500,135.000000,1,1,1);
	line_segment_r(0.762000,0.254000,0.035000,30.302214,-5.715000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,30.238714,-6.159500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,30.048214,-6.223000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,29.857714,-6.159500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,30.048214,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,30.238714,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,30.607016,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,30.670515,-5.397500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,30.861015,-5.334000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,31.051516,-5.397500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,31.115017,-5.588000,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,31.051516,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,30.861015,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,30.670515,-5.778500,135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,31.419815,-5.524500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,31.483316,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,31.673817,-5.842000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,31.864317,-5.778500,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.035000,31.927816,-5.524500,90.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.035000,32.359615,-5.270500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.035000,32.423115,-5.778500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.035000,32.359615,-5.207000,180.000000,1,1,1);
// Fill rect
	translate ([0, 0, -0.017500]) linear_extrude(height=0.035000) polygon ([		[10.668000, -11.430000], 
		[10.668000, -12.954000], 
		[12.192000, -12.954000], 
		[12.192000, -11.430000]
	],[[
		0, 1, 2, 3]]);
	translate ([11.430000, -14.732000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -17.271999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -19.812000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -22.351999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -24.892000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([11.430000, -27.431999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -27.431999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -24.892000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -22.351999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -19.812000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -17.271999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -14.732000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([19.049999, -12.192000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -20.066000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -22.606001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -25.146000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -27.686001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
// Fill rect
	translate ([0, 0, -0.017500]) linear_extrude(height=0.035000) polygon ([		[30.480000, -11.684000], 
		[30.480000, -13.208000], 
		[32.004002, -13.208000], 
		[32.004002, -11.684000]
	],[[
		0, 1, 2, 3]]);
	translate ([31.242001, -14.986000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([31.242001, -17.525999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -27.686001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -25.146000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -22.606001, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -20.066000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -17.525999, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -14.986000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	translate ([38.862000, -12.446000, 0]) cylinder (r=0.762000, h=0.035000, center=true, $fn=30);
	line_segment(1.499616,1.299972,0.035000,13.832078,-30.733999,90.000000);
	line_segment(1.499616,1.299972,0.035000,15.631922,-30.733999,90.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-39.497002,180.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-35.687000,180.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-36.957001,180.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-38.227001,180.000000);
	line_segment(1.499616,1.299972,0.035000,13.832078,-36.830002,90.000000);
	line_segment(1.499616,1.299972,0.035000,15.631922,-36.830002,90.000000);
	line_segment(1.499616,1.299972,0.035000,13.832078,-41.147999,90.000000);
	line_segment(1.499616,1.299972,0.035000,15.631922,-41.147999,90.000000);
	line_segment(1.499616,1.299972,0.035000,35.168079,-30.733999,90.000000);
	line_segment(1.499616,1.299972,0.035000,36.967918,-30.733999,90.000000);
	line_segment(1.499616,1.299972,0.035000,35.168079,-36.830002,90.000000);
	line_segment(1.499616,1.299972,0.035000,36.967918,-36.830002,90.000000);
	line_segment(1.499616,1.299972,0.035000,35.168079,-41.147999,90.000000);
	line_segment(1.499616,1.299972,0.035000,36.967918,-41.147999,90.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-43.306999,180.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-44.577000,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-44.577000,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-43.306999,180.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-40.766998,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-40.766998,180.000000);
	line_segment(2.032000,0.508000,0.035000,20.573999,-42.036999,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-42.036999,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-39.497002,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-38.227001,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-36.957001,180.000000);
	line_segment(2.032000,0.508000,0.035000,29.718000,-35.687000,180.000000);
	line_segment(1.499616,1.299972,0.035000,24.246078,-33.020000,90.000000);
	line_segment(1.499616,1.299972,0.035000,26.045921,-33.020000,90.000000);
	translate ([16.510000, -39.243000, 0]) cylinder (r=0.457200, h=0.035000, center=true, $fn=30);
	translate ([13.716000, -13.081000, 0]) cylinder (r=0.457200, h=0.035000, center=true, $fn=30);
}
}


// END_OF_LAYER layer_00

// START_OF_LAYER: plated-drill
layer_pdrill_list=[
	[0.355600, [11.430000, -12.192000]],
	[0.355600, [11.430000, -14.732000]],
	[0.355600, [11.430000, -17.271999]],
	[0.355600, [11.430000, -19.812000]],
	[0.355600, [11.430000, -22.351999]],
	[0.355600, [11.430000, -24.892000]],
	[0.355600, [11.430000, -27.431999]],
	[0.355600, [19.049999, -27.431999]],
	[0.355600, [19.049999, -24.892000]],
	[0.355600, [19.049999, -22.351999]],
	[0.355600, [19.049999, -19.812000]],
	[0.355600, [19.049999, -17.271999]],
	[0.355600, [19.049999, -14.732000]],
	[0.355600, [19.049999, -12.192000]],
	[0.355600, [31.242001, -20.066000]],
	[0.355600, [31.242001, -22.606001]],
	[0.355600, [31.242001, -25.146000]],
	[0.355600, [31.242001, -27.686001]],
	[0.355600, [31.242001, -12.446000]],
	[0.355600, [31.242001, -14.986000]],
	[0.355600, [31.242001, -17.525999]],
	[0.355600, [38.862000, -27.686001]],
	[0.355600, [38.862000, -25.146000]],
	[0.355600, [38.862000, -22.606001]],
	[0.355600, [38.862000, -20.066000]],
	[0.355600, [38.862000, -17.525999]],
	[0.355600, [38.862000, -14.986000]],
	[0.355600, [38.862000, -12.446000]],
	[0.254000, [16.510000, -39.243000]],
	[0.254000, [13.716000, -13.081000]],
];


// END_OF_LAYER layer_pdrill

// START_OF_LAYER: topsilk
module layer_topsilk_body (offset) {
translate ([0, 0, offset]) union () {
	line_segment_r(0.199644,0.203200,0.037500,14.732000,-30.034229,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,14.732000,-31.433769,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,14.732000,-36.130234,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,14.732000,-37.529770,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,14.732000,-40.448231,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,14.732000,-41.847767,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,36.068001,-30.034229,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,36.068001,-31.433769,180.000000,1,1,1);
	line_segment_r(17.780001,0.254000,0.037500,29.972000,-20.066000,90.000000,1,1,1);
	line_segment_r(10.160000,0.254000,0.037500,35.051998,-28.955999,180.000000,1,1,1);
	line_segment_r(17.780001,0.254000,0.037500,40.132000,-20.066000,-90.000000,1,1,1);
	line_segment_r(3.810000,0.254000,0.037500,31.877001,-11.176000,180.000000,1,1,1);
	line_segment_r(3.810000,0.254000,0.037500,38.227001,-11.176000,180.000000,1,1,1);
	line_segment_r(0.110792,0.254000,0.037500,33.784416,-11.231344,92.499641,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,33.794064,-11.341610,97.500259,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,33.813286,-11.450616,102.499977,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,33.841930,-11.557532,107.499977,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,33.879791,-11.661545,112.500046,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,33.926567,-11.761862,117.499908,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,33.981911,-11.857720,122.499672,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,34.045399,-11.948391,127.500198,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,34.116547,-12.033182,132.500183,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,34.194817,-12.111450,137.499817,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,34.279610,-12.182600,142.500107,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,34.370281,-12.246088,147.500046,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,34.466137,-12.301431,152.500092,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,34.566456,-12.348210,157.499954,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,34.670467,-12.386067,162.500031,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,34.777386,-12.414715,167.500031,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,34.886391,-12.433936,172.499741,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,34.996655,-12.443583,177.500366,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,35.107346,-12.443583,-177.500366,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,35.217609,-12.433936,-172.499741,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,35.326614,-12.414715,-167.500031,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,35.433533,-12.386067,-162.500031,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,35.537544,-12.348210,-157.499954,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,35.637863,-12.301431,-152.500092,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,35.733719,-12.246088,-147.500046,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,35.824390,-12.182600,-142.500107,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,35.909184,-12.111450,-137.499817,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,35.987453,-12.033182,-132.500183,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,36.058601,-11.948391,-127.499794,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,36.122089,-11.857721,-122.500381,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,36.177433,-11.761862,-117.499664,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,36.224209,-11.661545,-112.500046,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,36.262070,-11.557532,-107.499825,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,36.290714,-11.450616,-102.499977,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,36.309937,-11.341610,-97.500320,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,36.319584,-11.231344,-92.499641,1,1,1);
	line_segment_r(9.906000,0.254000,0.037500,19.304001,-40.132000,90.000000,1,1,1);
	line_segment_r(11.684000,0.254000,0.037500,25.146000,-45.084999,180.000000,1,1,1);
	line_segment_r(9.906000,0.254000,0.037500,30.988001,-40.132000,-90.000000,1,1,1);
	line_segment_r(5.207000,0.254000,0.037500,21.907499,-35.179001,180.000000,1,1,1);
	line_segment_r(5.207000,0.254000,0.037500,28.384501,-35.179001,0.000000,1,1,1);
	line_segment_r(0.055396,0.254000,0.037500,24.512209,-35.206673,92.499664,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.517033,-35.261803,97.500259,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.526644,-35.316307,102.499863,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,24.540968,-35.369766,107.500130,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.559896,-35.421772,112.499573,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,24.583284,-35.471931,117.499908,1,0,1);
	line_segment_r(0.055398,0.254000,0.037500,24.610956,-35.519859,122.499832,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,24.642700,-35.565197,127.499794,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.678276,-35.607594,132.500916,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.717407,-35.646725,137.499084,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.759804,-35.682301,142.500839,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.805140,-35.714043,147.499619,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,24.853069,-35.741714,152.500092,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,24.903229,-35.765102,157.500427,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,24.955235,-35.784031,162.499863,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.008692,-35.798355,167.500137,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.063196,-35.807968,172.499741,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.118328,-35.812794,177.500336,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.173672,-35.812794,-177.500336,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.228804,-35.807968,-172.499741,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.283308,-35.798355,-167.500137,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.336765,-35.784031,-162.499863,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.388771,-35.765102,-157.500427,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.438931,-35.741714,-152.500092,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.486860,-35.714043,-147.499619,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.532196,-35.682301,-142.500839,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.574593,-35.646725,-137.499084,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.613724,-35.607594,-132.500916,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.649300,-35.565197,-127.499794,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.681044,-35.519859,-122.500381,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.708715,-35.471931,-117.499428,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.732103,-35.421772,-112.499573,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.751032,-35.369762,-107.499825,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.765356,-35.316307,-102.500092,1,0,1);
	line_segment_r(0.055397,0.254000,0.037500,25.774967,-35.261803,-97.500259,1,0,1);
	line_segment_r(0.055396,0.254000,0.037500,25.779793,-35.206673,-92.499664,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,36.068001,-36.130234,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,36.068001,-37.529770,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,36.068001,-40.448231,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,36.068001,-41.847767,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,25.146000,-32.320229,180.000000,1,1,1);
	line_segment_r(0.199644,0.203200,0.037500,25.146000,-33.719769,180.000000,1,1,1);
	line_segment_r(17.780001,0.254000,0.037500,10.160000,-19.812000,90.000000,1,1,1);
	line_segment_r(10.160000,0.254000,0.037500,15.240000,-28.702000,180.000000,1,1,1);
	line_segment_r(17.780001,0.254000,0.037500,20.320000,-19.812000,90.000000,1,1,1);
	line_segment_r(3.810000,0.254000,0.037500,12.065000,-10.922000,180.000000,1,1,1);
	line_segment_r(3.810000,0.254000,0.037500,18.415001,-10.922000,180.000000,1,1,1);
	line_segment_r(0.110792,0.254000,0.037500,13.972417,-10.977344,92.499641,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,13.982064,-11.087610,97.500259,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.001285,-11.196616,102.499977,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.029933,-11.303532,107.499977,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,14.067790,-11.407545,112.500046,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,14.114569,-11.507862,117.499908,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,14.169912,-11.603720,122.499672,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.233400,-11.694391,127.500198,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.304550,-11.779182,132.500183,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.382818,-11.857450,137.499817,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,14.467610,-11.928600,142.500107,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.558280,-11.992088,147.500046,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,14.654138,-12.047431,152.500092,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,14.754455,-12.094210,157.499954,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.858468,-12.132067,162.500031,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,14.965384,-12.160715,167.500031,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,15.074390,-12.179936,172.499741,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,15.184656,-12.189583,177.500366,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,15.295344,-12.189583,-177.500366,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,15.405610,-12.179936,-172.499741,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,15.514616,-12.160715,-167.500031,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,15.621532,-12.132067,-162.500031,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,15.725545,-12.094210,-157.499954,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,15.825862,-12.047431,-152.500092,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,15.921720,-11.992088,-147.500046,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,16.012390,-11.928600,-142.500107,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,16.097181,-11.857450,-137.499817,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,16.175449,-11.779182,-132.500183,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,16.246599,-11.694391,-127.499794,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,16.310087,-11.603721,-122.500381,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,16.365431,-11.507862,-117.499664,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,16.412210,-11.407545,-112.500046,1,0,1);
	line_segment_r(0.110794,0.254000,0.037500,16.450068,-11.303532,-107.499825,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,16.478716,-11.196616,-102.499977,1,0,1);
	line_segment_r(0.110793,0.254000,0.037500,16.497936,-11.087610,-97.500320,1,0,1);
	line_segment_r(0.110792,0.254000,0.037500,16.507584,-10.977344,-92.499641,1,1,1);
	line_segment_r(0.330200,0.254000,0.037500,14.274800,-32.981899,180.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.037500,14.020800,-32.893002,135.000000,1,1,1);
	line_segment_r(0.660400,0.254000,0.037500,13.931900,-32.473900,90.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.037500,14.020800,-32.054798,-135.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.037500,14.274800,-31.965900,180.000000,1,1,1);
	line_segment_r(0.287368,0.254000,0.037500,14.846301,-32.067501,-135.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,14.947901,-32.473900,90.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,14.935201,-32.981899,180.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.037500,24.384001,-46.418499,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,24.447500,-46.926498,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,24.638000,-46.990002,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,24.828501,-46.926498,-135.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.037500,24.892000,-46.418499,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.260300,-46.037498,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,25.450800,-45.973999,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.641300,-46.037498,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.641300,-46.926498,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,25.450800,-46.990002,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.260300,-46.926498,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,25.450800,-46.431198,180.000000,1,1,1);
	line_segment_r(0.203200,0.254000,0.037500,25.704800,-46.202599,90.000000,1,1,1);
	line_segment_r(0.304800,0.254000,0.037500,25.704800,-46.710602,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.641300,-46.494701,-45.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.641300,-46.367699,45.000000,1,1,1);
	line_segment_r(0.508000,0.254000,0.037500,35.521900,-38.061901,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,35.839401,-38.125401,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,35.902901,-38.315899,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,35.839401,-38.506401,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,35.585400,-38.569901,180.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,35.394901,-38.569901,90.000000,1,1,1);
	line_segment_r(0.592425,0.254000,0.037500,35.750500,-38.823898,120.963753,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.271198,-38.125401,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,36.461700,-38.061901,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.652199,-38.125401,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.652199,-39.014400,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,36.461700,-39.077900,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.271198,-39.014400,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,36.461700,-38.519100,180.000000,1,1,1);
	line_segment_r(0.203200,0.254000,0.037500,36.715698,-38.290501,90.000000,1,1,1);
	line_segment_r(0.304800,0.254000,0.037500,36.715698,-38.798500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.652199,-38.582600,-45.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.652199,-38.455601,45.000000,1,1,1);
	line_segment_r(0.508000,0.254000,0.037500,35.521900,-42.379902,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,35.839401,-42.443401,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,35.902901,-42.633900,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,35.839401,-42.824402,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,35.585400,-42.887901,180.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,35.394901,-42.887901,90.000000,1,1,1);
	line_segment_r(0.592425,0.254000,0.037500,35.750500,-43.141899,120.963753,1,1,1);
	line_segment_r(0.813197,0.254000,0.037500,36.461700,-42.697399,-128.659805,1,1,1);
	line_segment_r(0.635000,0.254000,0.037500,36.525200,-43.014900,180.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,36.715698,-42.887901,90.000000,1,1,1);
	line_segment_r(0.508000,0.254000,0.037500,14.185900,-38.061901,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,14.503400,-38.125401,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,14.566900,-38.315899,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,14.503400,-38.506401,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,14.249400,-38.569901,180.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,14.058900,-38.569901,90.000000,1,1,1);
	line_segment_r(0.592425,0.254000,0.037500,14.414500,-38.823898,120.963753,1,1,1);
	line_segment_r(0.287368,0.254000,0.037500,14.973301,-38.163502,-135.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,15.074901,-38.569901,90.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,15.062201,-39.077900,180.000000,1,1,1);
	line_segment_r(0.508000,0.254000,0.037500,14.185900,-42.633900,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,14.503400,-42.697399,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,14.566900,-42.887901,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,14.503400,-43.078400,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,14.249400,-43.141899,180.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,14.058900,-43.141899,90.000000,1,1,1);
	line_segment_r(0.592425,0.254000,0.037500,14.414500,-43.395901,120.963753,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,14.935201,-42.697399,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,15.189201,-42.633900,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,15.443201,-42.697399,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,15.506701,-42.887901,90.000000,1,1,1);
	line_segment_r(0.898026,0.254000,0.037500,15.189201,-43.332401,-135.000000,1,1,1);
	line_segment_r(0.635000,0.254000,0.037500,15.189201,-43.649899,180.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.037500,35.864799,-33.235901,180.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.037500,35.610802,-33.146999,135.000000,1,1,1);
	line_segment_r(0.660400,0.254000,0.037500,35.521900,-32.727901,90.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.037500,35.610802,-32.308800,-135.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.037500,35.864799,-32.219898,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.398201,-32.283401,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,36.652199,-32.219898,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,36.906200,-32.283401,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,36.969700,-32.473900,90.000000,1,1,1);
	line_segment_r(0.898026,0.254000,0.037500,36.652199,-32.918400,-135.000000,1,1,1);
	line_segment_r(0.635000,0.254000,0.037500,36.652199,-33.235901,180.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.037500,34.543999,-9.842500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,34.607498,-10.350500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,34.798000,-10.414000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,34.988499,-10.350500,-135.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.037500,35.051998,-9.842500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,35.420300,-9.461500,-135.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,35.674301,-9.398000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,35.928299,-9.461500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,35.991798,-9.652000,90.000000,1,1,1);
	line_segment_r(0.898026,0.254000,0.037500,35.674301,-10.096500,-135.000000,1,1,1);
	line_segment_r(0.635000,0.254000,0.037500,35.674301,-10.414000,180.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.037500,24.688801,-31.457899,180.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.037500,24.434799,-31.368999,135.000000,1,1,1);
	line_segment_r(0.660400,0.254000,0.037500,24.345900,-30.949900,90.000000,1,1,1);
	line_segment_r(0.251447,0.254000,0.037500,24.434799,-30.530800,-135.000000,1,1,1);
	line_segment_r(0.330200,0.254000,0.037500,24.688801,-30.441900,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.222200,-30.505400,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,25.412701,-30.441900,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.603201,-30.505400,135.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.603201,-31.394400,-135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,25.412701,-31.457899,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.222200,-31.394400,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,25.412701,-30.899099,180.000000,1,1,1);
	line_segment_r(0.203200,0.254000,0.037500,25.666700,-30.670500,90.000000,1,1,1);
	line_segment_r(0.304800,0.254000,0.037500,25.666700,-31.178499,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.603201,-30.962601,-45.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,25.603201,-30.835600,45.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.037500,14.732000,-9.588500,90.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,14.795500,-10.096500,135.000000,1,1,1);
	line_segment_r(0.254000,0.254000,0.037500,14.986000,-10.160000,180.000000,1,1,1);
	line_segment_r(0.179605,0.254000,0.037500,15.176500,-10.096500,-135.000000,1,1,1);
	line_segment_r(0.889000,0.254000,0.037500,15.240000,-9.588500,90.000000,1,1,1);
	line_segment_r(0.287368,0.254000,0.037500,15.646401,-9.245600,-135.000000,1,1,1);
	line_segment_r(1.016000,0.254000,0.037500,15.748001,-9.652000,90.000000,1,1,1);
	line_segment_r(0.381000,0.254000,0.037500,15.735301,-10.160000,180.000000,1,1,1);
}
}


// END_OF_LAYER layer_topsilk

// START_OF_LAYER: bottomsilk
module layer_bottomsilk_body (offset) {
translate ([0, 0, offset]) union () {
}
}


// END_OF_LAYER layer_bottomsilk

module board_outline () {
	polygon([[0,0],[0,-50.000000],[49.999901,-50.000000],[49.999901,0]],
[[0,1,2,3]]);
}

module all_holes() {
	plating=0.017500;
	union () {
		for (i = layer_pdrill_list) {
			translate([i[1][0],i[1][1],0]) cylinder(r=i[0]+2*plating, h=1.770000, center=true, $fn=30);
		}
		for (i = layer_udrill_list) {
			translate([i[1][0],i[1][1],0]) cylinder(r=i[0], h=1.770000, center=true, $fn=30);
		}
	}
}

module all_plating() {
	plating=0.037500;
	union () {
		for (i = layer_pdrill_list) {
			translate([i[1][0],i[1][1],0]) difference () {
				cylinder(r=i[0]+2*plating, h=1.680000, center=true, $fn=30);
				cylinder(r=i[0]-0.01, h=1.870000, center=true, $fn=30);
			}
		}
	}
}

module board_body() {
	translate ([0, 0, -0.800000]) linear_extrude(height=1.600000) board_outline();}

/***************************************************/
/*                                                 */
/* Components                                      */
/*                                                 */
/***************************************************/
module all_components() {
translate ([14.732000, -30.733999, 0.835000]) {


chip_c (
	L=2.05,
	T=0.35,
	W=1.25,
	H=1.25
);
}
translate ([36.068001, -30.733999, 0.835000]) {


chip_c (
	L=2.05,
	T=0.35,
	W=1.25,
	H=1.25
);
}
translate ([0,0,4.5]) translate ([31.242001, -12.446000, 0.835000]) {
/*

DIP 14, 0.300mil

*/


translate ([3.81,-7.62,0]) dip(
	N=14,
	P=2.54,
	TC=7.62,
	W=0.45,
	T=0.32,
	A=6.5,
	B=19,
	H=5.33,
	K=0.38,
	h=3.55
);}
translate ([31.242001, -12.446000, 0.835000]) {
/*

DIP socket, 0.300mil

*/


translate ([3.81,-7.62,0]) dipsocket(
	N=14,
	P=2.54,
	TC=7.62,
	W=0.51,
	A=10.16,
	B=17.78,
	H=4.19,
	K=1.01,
	m=1,
	h=3.18,
	d1=1.5,
	d2=1.83,
	rect_pin=false
);}
translate ([25.146000, -40.132000, 0.835000]) {


soic(
	N=16,
	L=10.32,
	P=1.27,
	W=0.42,
	H=2.65,
	T=1.0,
	A=7.5,
	B=10.3,
	K=0.1
);}
translate ([36.068001, -36.830002, 0.835000]) {


chip_r (
	L=2.05,
	T=0.35,
	W=1.25,
	H=0.50
);
}
translate ([36.068001, -41.147999, 0.835000]) {


chip_r (
	L=2.05,
	T=0.35,
	W=1.25,
	H=0.50
);
}
translate ([14.732000, -36.830002, 0.835000]) {


chip_r (
	L=2.05,
	T=0.35,
	W=1.25,
	H=0.50
);
}
translate ([14.732000, -41.147999, 0.835000]) {


chip_r (
	L=2.05,
	T=0.35,
	W=1.25,
	H=0.50
);
}
translate ([25.146000, -33.020000, 0.835000]) {


chip_c (
	L=2.05,
	T=0.35,
	W=1.25,
	H=1.25
);
}
translate ([11.430000, -12.192000, 0.835000]) {
/*

DIP 14, 0.300mil

*/


translate ([3.81,-7.62,0]) dip(
	N=14,
	P=2.54,
	TC=7.62,
	W=0.45,
	T=0.32,
	A=6.5,
	B=19,
	H=5.33,
	K=0.38,
	h=3.55
);}
}

/***************************************************/
/*                                                 */
/* Embedded include files                          */
/*                                                 */
/***************************************************/
/*
OpenSCAD Model:  chip capacitor

  L  - body length
  T  - pad length
  W  - width
  H  - height
  padcolor - color of metal leads
  bodycolor - color of body
  simple - 0 = realistic model, 1 = simplified model

*/
 
module chip_c(
	L=2.00,
	T=0.50,
	W=1.25,
	H=1.20,
	padcolor=[0.9,0.9,0.9],
	bodycolor=[0.722,0.541,0.0],
	simple=1
) {

	module chippad() {
		if (simple) {
			color(padcolor)cube([T,W,H],center=true);
		} else {
			color(padcolor) union () {
				cube([T-0.1,W-0.1,H    ],center=true);
				cube([T-0.1,W    ,H-0.1],center=true);
				cube([T    ,W-0.1,H-0.1],center=true);
				translate([-T/2+0.05,-W/2+0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([T/2-0.05,-W/2+0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([-T/2+0.05,W/2-0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([T/2-0.05,W/2-0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([-T/2+0.05,0,H/2-0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([T/2-0.05,0,H/2-0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([-T/2+0.05,0,-H/2+0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([T/2-0.05,0,-H/2+0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([0,-W/2+0.05,H/2-0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([0,W/2-0.05,H/2-0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([0,-W/2+0.05,-H/2+0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([0,W/2-0.05,-H/2+0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([-T/2+0.05,-W/2+0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([-T/2+0.05,-W/2+0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,-W/2+0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,-W/2+0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
				translate([-T/2+0.05,W/2-0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([-T/2+0.05,W/2-0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,W/2-0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,W/2-0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
			}
		}
	}
	color(bodycolor) translate([0,0,H/2.]) cube([L-2*T+0.1,W-0.1,H-0.1],center=true);
	translate ([-L/2.+T/2.,0,H/2.]) chippad();
	translate ([L/2.-T/2.,0,H/2.]) chippad();
}
/*
OpenSCAD Model:  DIP package

Parameters:
  N  - Number of pins
  P  - Pitch
  TC - Width
  W  - Width of pin
  T  - Thickness of pin
  A  - Body length
  B  - Body width
  H  - Body height
  K  - Elevation
  h  - Pin length
  pincolor - color of pin
  bodycolor - color of plastic body
  simple - 0 = realistic model, 1 = simplified model

*/
 
module dip(
	N=14,
	P=2.54,
	TC=7.62,
	W=0.45,
	H=5.33,
	T=0.375,
	A=6.35,
	B=19.2,
	K=0.38,
	h=2.0,
	pincolor=[0.9,0.9,0.9],
	bodycolor=[0.2,0.2,0.2],
	simple=0
) {

	module dippinblock()	{
		q=[0,0.173648178,0.342020143,0.5,0.64278761,0.766044443,0.866025404,0.939692621,0.984807753,1];
	
		x=0.01;
		t2=T/2;
		hk=(H-K)/2+K;
		dt=1.2*T;
		dt2=dt-T;
		cx=dt-t2;
		cy= hk+t2-dt;
		color(pincolor) for (i=[0:(N/2)-1]) {
			 union () {
					translate ([0,-((N/2)-1)/2*P+i*P+1.5*W,0]) rotate(90,[1,0,0]) linear_extrude(height=3*W) {
					if (simple) {
 						polygon([	
							[-t2,0], [-t2, hk+t2-dt], 	[dt-t2,hk+t2], [(TC-A)/2,hk+t2],[(TC-A)/2,hk-t2], [dt-t2,hk-t2], [t2,hk+t2-dt], [t2,0]]
						);
					} else {
						 polygon([
							[-t2,0],
							[cx-dt*q[9],dt*q[0]+cy],[cx-dt*q[8],dt*q[1]+cy],[cx-dt*q[7],dt*q[2]+cy],[cx-dt*q[6],dt*q[3]+cy],[cx-dt*q[5],dt*q[4]+cy],
							[cx-dt*q[4],dt*q[5]+cy],[cx-dt*q[3],dt*q[6]+cy],[cx-dt*q[2],dt*q[7]+cy],[cx-dt*q[1],dt*q[8]+cy],[cx-dt*q[0],dt*q[9]+cy],
							[dt-t2,hk+t2],
							[(TC-A)/2,hk+t2],[(TC-A)/2,hk-t2],
							[cx-dt2*q[0],dt2*q[9]+cy],[cx-dt2*q[1],dt2*q[8]+cy],[cx-dt2*q[2],dt2*q[7]+cy],[cx-dt2*q[3],dt2*q[6]+cy],[cx-dt2*q[4],dt2*q[5]+cy],
							[cx-dt2*q[5],dt2*q[4]+cy],[cx-dt2*q[6],dt2*q[3]+cy],[cx-dt2*q[7],dt2*q[2]+cy],[cx-dt2*q[8],dt2*q[1]+cy],[cx-dt2*q[9],dt2*q[0]+cy],
							[t2,0]]
						);
					}
					}
				translate ([0,-((N/2)-1)/2*P+i*P,-1]) cube([T,W,2],center=true);
			}
		}
	}
	color(bodycolor) {
		translate([0,0,(H-K)/2+K]) {
			difference() {
			if (simple) {
				cube([A,B,H-K],center=true);
			} else {
				polyhedron(
					[[-A/2+0.2,B/2-0.2,(H-K)/2],[A/2-0.2,B/2-0.2,(H-K)/2],[A/2-0.2,-B/2+0.2,(H-K)/2],[-A/2+0.2,-B/2+0.2,(H-K)/2],
					 [-A/2,B/2,0.1],[A/2,B/2,0.1],[A/2,-B/2,0.1],[-A/2,-B/2,0.1],
					 [-A/2,B/2,-0.1],[A/2,B/2,-0.1],[A/2,-B/2,-0.1],[-A/2,-B/2,-0.1],
					 [-A/2+0.2,B/2-0.2,-(H-K)/2],[A/2-0.2,B/2-0.2,-(H-K)/2],[A/2-0.2,-B/2+0.2,-(H-K)/2],[-A/2+0.2,-B/2+0.2,-(H-K)/2]],
					[
					[0,1,2],[2,3,0],[14,13,12],[12,15,14],
					[0,4,5],[5,1,0],[1,5,6],[6,2,1],[2,6,7],[7,3,2],[3,7,4],[4,0,3],
					[4,8,9],[9,5,4],[5,9,10],[10,6,5],[6,10,11],[11,7,6],[11,8,4],[4,7,11],
					[8,12,13],[13,9,8],[9,13,14],[14,10,9],[10,14,15],[15,11,10],[11,15,12],[12,8,11],
					]
				);
			}
			translate([0,B/2-1,(H-K)/2]) cube([1,2,0.5],center=true);
			}
		}
	}

	translate([-TC/2,0,0]) dippinblock();
	translate([TC/2,0,0]) rotate(180,[0,0,1]) dippinblock();
}
/*
OpenSCAD Model:  DIP socket

Parameters:
  N  - Number of pins
  P  - Pitch
  TC - Width
  W  - Width/diasmeter of pin
  A  - Body width
  B  - Body length
  H  - Body height
  K  - Elevation
  m  - number of crossbars
  h  - Pin length (for round pin type)
       or edge extension (for rectangular pin type)
  E  - Edge height
  T  - Thickness of pin
  d1 - diameter of middle part of pin
  d2 - diameter of top part of pin
  pincolor - color of pin
  bodycolor - color of plastic body
  simple - 0 = realistic model, 1 = simplified model

*/
 
module dipsocket(
	N=14,
	P=2.54,
	TC=7.62,
	W=0.7,
	A=10.16,
	B=20.19,
	H=5.08,
	K=0.5,
	m=0,
	h=2.0,
	E=1,
	T=0.3,
	d1=1.2,
	d2=1.6,
	rect_pin=true,
	pincolor=[1,0.85,0.24],
	bodycolor=[0.2,0.2,0.2],
	simple=0
) {

	module dipspinblock()	{
		color(pincolor) for (i=[0:(N/2)-1]) {
			 translate ([0,-((N/2)-1)/2*P+i*P,0]) {
          if (rect_pin) {
				 union () {
					translate([-0.2,0,H-E+0.2]) cube([0.3,2*W,0.5],center=true);
					translate([0.2,0,H-E]) cube([0.3,2*W,0.2],center=true);
					translate([0,0,-h/2+0.05]) cube([T,W,h+0.1],center=true);
				 }
			 } else {
				 union () {
					translate([0,0,-h/2+0.05]) cylinder(r=W/2,h=h+0.1,center=true,$fn=36);
					translate([0,0,K/2+0.05]) cylinder(r=d1/2,h=K+0.1,center=true,$fn=36);
					difference () {
						translate([0,0,H]) cylinder(r=d2/2,h=0.1,center=true,$fn=36);
						translate([0,0,H]) cylinder(r=W/2,h=0.2,center=true,$fn=36);
					}
				 }
          }
			 }
		}
	}

	ew=(A-TC)/2-0.2;
	bw=A-TC;
   BH=(rect_pin)?H-E:H;
   BK=(rect_pin)?0:K;
   nn=(B-bw)/(m+1);
	YY=-(m - 1)/2 * nn;
	color(bodycolor) {
		  union () {
					if (rect_pin) {
						translate([-A/2+ew/2,0,H/2]) cube([ew,B,H],center=true);
						translate([A/2-ew/2,0,H/2]) cube([ew,B,H],center=true);
		  			}		
					translate([-TC/2,0,(BH+BK)/2]) cube([bw,B,BH-BK],center=true);
					translate([TC/2,0,(BH+BK)/2]) cube([bw,B,BH-BK],center=true);
					translate([0,B/2-bw/2,(BH+K)/2]) cube([A,bw,BH-K],center=true);
					translate([0,-B/2+bw/2,(BH+K)/2]) cube([A,bw,BH-K],center=true);
					if (m>0) {
					for (i=[0:m-1]) {
						translate([0,YY+i*nn,(BH+K)/2]) cube([A,bw,BH-K],center=true);
					}
			}
		}
	}

	translate([-TC/2,0,0]) dipspinblock();
	translate([TC/2,0,0]) rotate(180,[0,0,1]) dipspinblock();
}
/*
OpenSCAD Model:  Small Outline IC

  N  - number of pins
  L  - width, including pads
  P  - pitch
  W  - width of pad
  H  - total height
  T  - toe length
  A  - body width
  B  - body height
  K  - elevation
  padcolor - color of pads
  bodycolor - color of plastic body
  simple - 0 = realistic model, 1 = simplified model

*/
 
module soic(
	N=14,
	L=6.4,
	P=0.65,
	W=0.25,
	H=1.2,
	T=0.624,
	A=4.4,
	B=5,
	K=0.1,
	padcolor=[0.9,0.9,0.9],
	bodycolor=[0.2,0.2,0.2],
	simple=0
) {

	module soicpadblock(n)	{
		x=0.01;
		color(padcolor) for (i=[0:n-1]) {
			translate ([0,-(n-1)/2*P+i*P+W/2,0])  rotate(90,[1,0,0]) linear_extrude(height=W) polygon(
				[[0,0],[0,0.1],[T-x,0.1],[T+((L-A)/2-T)/2,(H-K)/2+0.05+K],[(L-A)/2+0.05,(H-K)/2+0.05+K],
				 [(L-A)/2+0.05,(H-K)/2-0.05+K],[T+((L-A)/2-T)/2+x,(H-K)/2-0.05+K],[T,0]]
			);
		}
	}

	color(bodycolor) {
		translate([0,0,(H-K)/2+K]) {
			difference() {
			if (simple) {
				cube([A,B,H-K],center=true);
			} else {
				polyhedron(
					[[-A/2+0.2,B/2-0.2,(H-K)/2],[A/2-0.2,B/2-0.2,(H-K)/2],[A/2-0.2,-B/2+0.2,(H-K)/2],[-A/2+0.2,-B/2+0.2,(H-K)/2],
					 [-A/2,B/2,0.1],[A/2,B/2,0.1],[A/2,-B/2,0.1],[-A/2,-B/2,0.1],
					 [-A/2,B/2,-0.1],[A/2,B/2,-0.1],[A/2,-B/2,-0.1],[-A/2,-B/2,-0.1],
					 [-A/2+0.2,B/2-0.2,-(H-K)/2],[A/2-0.2,B/2-0.2,-(H-K)/2],[A/2-0.2,-B/2+0.2,-(H-K)/2],[-A/2+0.2,-B/2+0.2,-(H-K)/2]],
					[
					[0,1,2],[2,3,0],[14,13,12],[12,15,14],
					[0,4,5],[5,1,0],[1,5,6],[6,2,1],[2,6,7],[7,3,2],[3,7,4],[4,0,3],
					[4,8,9],[9,5,4],[5,9,10],[10,6,5],[6,10,11],[11,7,6],[11,8,4],[4,7,11],
					[8,12,13],[13,9,8],[9,13,14],[14,10,9],[10,14,15],[15,11,10],[11,15,12],[12,8,11],
					]
				);
			}
			translate([-A/2+1,B/2-1,(H-K)/2+0.3]) sphere(r=0.5,$fn=30);
			}
		}
	}

	translate([-L/2,0,0]) soicpadblock(N/2);
	translate([L/2,0,0]) rotate(180,[0,0,1]) soicpadblock(N/2);
}
/*
OpenSCAD Model:  chip resistor

  L  - body length
  T  - pad length
  W  - width
  H  - height
  padcolor - color of metal leads
  bodycolor - color of body
  topcolor - color body top
  simple - 0 = realistic model, 1 = simplified model

*/
 
module chip_r(
	L=2.05,
	T=0.35,
	W=1.25,
	H=0.50,
	padcolor=[0.9,0.9,0.9],
	bodycolor=[1,1,0.9],
	topcolor=[0.0,0.0,0.0],
	labelcolor=[1,1,1],
	label="330",
	simple=1
) {

	module chippad() {
		if (simple) {
			color(padcolor)cube([T,W,H],center=true);
		} else {
			color(padcolor) union () {
				cube([T-0.1,W-0.1,H    ],center=true);
				cube([T-0.1,W    ,H-0.1],center=true);
				cube([T    ,W-0.1,H-0.1],center=true);
				translate([-T/2+0.05,-W/2+0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([T/2-0.05,-W/2+0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([-T/2+0.05,W/2-0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([T/2-0.05,W/2-0.05,0]) cylinder(r=0.05,h=H-0.1,$fn=30,center=true);
				translate([-T/2+0.05,0,H/2-0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([T/2-0.05,0,H/2-0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([-T/2+0.05,0,-H/2+0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([T/2-0.05,0,-H/2+0.05]) rotate(90,[1,0,0])cylinder(r=0.05,h=W-0.1,$fn=30,center=true);
				translate([0,-W/2+0.05,H/2-0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([0,W/2-0.05,H/2-0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([0,-W/2+0.05,-H/2+0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([0,W/2-0.05,-H/2+0.05]) rotate(90,[0,1,0])cylinder(r=0.05,h=T-0.1,$fn=30,center=true);
				translate([-T/2+0.05,-W/2+0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([-T/2+0.05,-W/2+0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,-W/2+0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,-W/2+0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
				translate([-T/2+0.05,W/2-0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([-T/2+0.05,W/2-0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,W/2-0.05,-H/2+0.05]) sphere(r=0.05, $fn=30);
				translate([T/2-0.05,W/2-0.05,H/2-0.05]) sphere(r=0.05, $fn=30);
			}
		}
	}
	color(bodycolor) translate([0,0,H/2.]) cube([L-2*T+0.1,W-0.1,H-0.1],center=true);
	color(topcolor) translate([0,0,H-0.05]) cube([L-2*T,W-0.2,0.05],center=true);
	translate ([-L/2.+T/2.,0,H/2.]) chippad();
	translate ([L/2.-T/2.,0,H/2.]) chippad();
}

/***************************************************/
/*                                                 */
/* Final board assembly                            */
/* Here is the complete board built from           */
/* pre-generated modules                           */
/*                                                 */
/***************************************************/
color ([1, 0.4, 0.2])
	difference() {
		layer_00_body(0.817500);
		all_holes();
	}

color ([1, 0.4, 0.2])
	difference() {
		layer_05_body(-0.817500);
		all_holes();
	}

color ([1, 1, 1])
	layer_topsilk_body(0.818750);

color ([1, 1, 1])
	layer_bottomsilk_body(-0.818750);

color ([1, 0.4, 0.2])
	all_plating();

color ([0.44, 0.44, 0])
	difference() {
		board_body();
		all_holes();
	}

all_components();
// END_OF_BOARD
