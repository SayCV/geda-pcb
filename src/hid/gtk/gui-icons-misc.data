/*
 *                            COPYRIGHT
 *
 *  PCB, interactive printed circuit board design
 *  Copyright (C) 1994,1995,1996 Thomas Nau
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  Contact addresses for paper mail and Email:
 *  Thomas Nau, Schlehenweg 15, 88471 Baustetten, Germany
 *  Thomas.Nau@rz.uni-ulm.de
 *
 */


/* XPM */
static char *icon_bits[] = {
"32 32 88 1",
" 	c None",
".	c #9F9F9E",
"+	c #A0A0A0",
"@	c #A1A1A1",
"#	c #9F9F9F",
"$	c #9E9E9E",
"%	c #9D9D9D",
"&	c #9C9C9C",
"*	c #9B9B9B",
"=	c #9A9A9A",
"-	c #999999",
";	c #989898",
">	c #979797",
",	c #969696",
"'	c #959595",
")	c #949494",
"!	c #939393",
"~	c #929292",
"{	c #919191",
"]	c #909090",
"^	c #9D9E9D",
"/	c #EBF3E3",
"(	c #FEFEFE",
"_	c #FDFDFD",
":	c #FCFCFC",
"<	c #FBFBFB",
"[	c #FAFAFA",
"}	c #F9F9F9",
"|	c #E6EEDE",
"1	c #8E8F8E",
"2	c #5FC500",
"3	c #4E9A06",
"4	c #4F9B06",
"5	c #5EC400",
"6	c #5FC400",
"7	c #8F8F8F",
"8	c #4E9B06",
"9	c #8E8E8E",
"0	c #4F9A07",
"a	c #86B857",
"b	c #CEE5B6",
"c	c #EEEEEC",
"d	c #CADBB7",
"e	c #5BB803",
"f	c #5EC300",
"g	c #D4E0C6",
"h	c #8CD24A",
"i	c #519C0A",
"j	c #62C604",
"k	c #81B54E",
"l	c #8D8D8D",
"m	c #B7D19F",
"n	c #B0C79B",
"o	c #B6CDA0",
"p	c #B8D39F",
"q	c #D3D7CF",
"r	c #A5C28A",
"s	c #AAC491",
"t	c #A8C48E",
"u	c #ACC594",
"v	c #8C8C8C",
"w	c #CDDCBD",
"x	c #6CAA30",
"y	c #F8F8F8",
"z	c #8B8B8B",
"A	c #B6D19C",
"B	c #A3C781",
"C	c #CEDDBF",
"D	c #6CAA31",
"E	c #8A8A8A",
"F	c #B5D299",
"G	c #B4C9A0",
"H	c #62C504",
"I	c #55AA04",
"J	c #CBDEB7",
"K	c #52A405",
"L	c #52A305",
"M	c #5EC101",
"N	c #52A505",
"O	c #53A504",
"P	c #5DC001",
"Q	c #898B88",
"R	c #53A604",
"S	c #51A305",
"T	c #8A8A89",
"U	c #E6EDDF",
"V	c #686C67",
"W	c #5D605C",
"                                ",
"                                ",
"     .+@@@+#$%&*=-;>,')!~{]     ",
"    ^/((((_____:::<<<<[[[}|1    ",
"    $(22233234534533543262}7    ",
"    $(22233238638633683222}7    ",
"    %(22233238638633683222}7    ",
"    %(22233238638633683222}9    ",
"    &_22233233238233233222}9    ",
"    *_22233238633233683222}9    ",
"    *_2220abcccccccccdaef2}9    ",
"    =_222aghi3233233jkga22}l    ",
"    -_222dkmn3on3pn3mnkd22}l    ",
"    ;:222ciqq3qq3qq3qqic22}l    ",
"    >:222c3rs3tu3tu3tu3c22}v    ",
"    ,:222c3333333333333c22}v    ",
"    ':222cwx33333333333c22yz    ",
"    )<222cAB33333333333c22yz    ",
"    !<222cCD33333333333c22yE    ",
"    ~<222c3333333333333c22yE    ",
"    ~[222c3ut3ut3ut3ut3c22yE    ",
"    {[222ciqq3qq3qq3qqic22yE    ",
"    ][222dkFG3FG3FG3FGkd22yE    ",
"    7[222aghi3233233HkgaIIyE    ",
"    9}2250abcccccccccJa033yE    ",
"    l}2fK3Kf33233fK3LMN333yE    ",
"    v}fL3OMK33233KPK3Kf222yQ    ",
"    z}33RMS3332333KPK33333yE    ",
"    TUyyyyyyyyyyyyyyyyyyyyUT    ",
"    VTEEEEEEEEEEEEEEEEEEEETW    ",
"                                ",
"                                "};


#define rotateIcon_width 16
#define rotateIcon_height 16
static unsigned char rotateIcon_bits[] = {
   0xf0, 0x03, 0xf8, 0x87, 0x0c, 0xcc, 0x06, 0xf8, 0x03, 0xb0, 0x01, 0x98,
   0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x19, 0x80, 0x0d, 0xc0,
   0x1f, 0x60, 0x3b, 0x30, 0xe1, 0x3f, 0xc0, 0x0f};

#define rotateMask_width 16
#define rotateMask_height 16
static unsigned char rotateMask_bits[] = {
   0xf0, 0x03, 0xf8, 0x87, 0x0c, 0xcc, 0x06, 0xf8, 0x03, 0xf0, 0x01, 0xf8,
   0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x1f, 0x80, 0x0f, 0xc0,
   0x1f, 0x60, 0x3b, 0x30, 0xe1, 0x3f, 0xc0, 0x0f};

#define handIcon_width 16
#define handIcon_height 16
static unsigned char handIcon_bits[] = {
   0x80, 0x00, 0x48, 0x09, 0x54, 0x15, 0x54, 0x15, 0x54, 0x15, 0x64, 0xcb,
   0x68, 0xab, 0x2b, 0x5b, 0x05, 0x58, 0x05, 0x20, 0x01, 0x20, 0x02, 0x20,
   0x02, 0x30, 0x04, 0x10, 0x08, 0x08, 0xf0, 0x0f};
#define handMask_width 16
#define handMask_height 16
static unsigned char handMask_bits[] = {
   0x80, 0x00, 0xc8, 0x09, 0xdc, 0x1d, 0xdc, 0x1d, 0xdc, 0x1d, 0xfc, 0xcf,
   0x38, 0xee, 0x1f, 0x78, 0x0f, 0x78, 0x07, 0x30, 0x07, 0x30, 0x0e, 0x38,
   0x1e, 0x3c, 0x3c, 0x1e, 0xf8, 0x0f, 0xf0, 0x0f};
#define lockIcon_width 16
#define lockIcon_height 16
static unsigned char lockIcon_bits[] = {
   0x00, 0x00, 0xe0, 0x07, 0x30, 0x0c, 0x10, 0x08, 0x18, 0x18, 0x08, 0x10,
   0x08, 0x00, 0xfc, 0x3f, 0x04, 0x20, 0xfc, 0x3f, 0x04, 0x20, 0xfc, 0x3f,
   0x04, 0x20, 0xfc, 0x3f, 0x04, 0x20, 0xfc, 0x3f};
#define lockMask_width 16
#define lockMask_height 16
static unsigned char lockMask_bits[] = {
   0xf0, 0x0f, 0xf0, 0x0f, 0xf8, 0x1f, 0x38, 0x1c, 0x1c, 0x3c, 0x1c, 0x38,
   0x1c, 0x30, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f,
   0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f};
